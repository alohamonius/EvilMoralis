{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/git-public/evils-moralis/src/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MoralisProvider } from \"react-moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = process.env.REACT_APP_MORALIS_URL;\nconst APP_ID = process.env.REACT_APP_MORALIS_APP_ID;\nconst AlertContext = /*#__PURE__*/React.createContext(null);\nAlertContext.displayName = 'AlertContext';\n\nconst AlertProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [alert, setAlert] = useState();\n  const [alertText, setAlertText] = useState(null);\n};\n\n_s(AlertProvider, \"CAtdqfgPJmF15ecyF9l4bVDJFu4=\");\n\n_c = AlertProvider;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(MoralisProvider, {\n    appId: APP_ID !== null && APP_ID !== void 0 ? APP_ID : \"Invalid\",\n    serverUrl: URL !== null && URL !== void 0 ? URL : \"Invalid\",\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertProvider\");","map":{"version":3,"sources":["/Users/macbook/git-public/evils-moralis/src/index.tsx"],"names":["React","useState","ReactDOM","App","reportWebVitals","MoralisProvider","URL","process","env","REACT_APP_MORALIS_URL","APP_ID","REACT_APP_MORALIS_APP_ID","AlertContext","createContext","displayName","AlertProvider","children","alert","setAlert","alertText","setAlertText","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SAASC,eAAT,QAAgC,eAAhC;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAxB;AACA,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,wBAA3B;AAEA,MAAMC,YAAY,gBAAGZ,KAAK,CAACa,aAAN,CAAoB,IAApB,CAArB;AACAD,YAAY,CAACE,WAAb,GAA2B,cAA3B;;AAEA,MAAMC,aAAa,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,EAAlC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;AAGD,CALD;;GAAMc,a;;KAAAA,a;AAONb,QAAQ,CAACmB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,eAAD;AAAiB,IAAA,KAAK,EAAEX,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAY,SAAlC;AAA6C,IAAA,SAAS,EAAEJ,GAAF,aAAEA,GAAF,cAAEA,GAAF,GAAS,SAA/D;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEgB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CAUA;AACA;AACA;;AACAnB,eAAe","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Alert } from 'antd';\nimport { MoralisProvider } from \"react-moralis\";\n\nconst URL = process.env.REACT_APP_MORALIS_URL;\nconst APP_ID = process.env.REACT_APP_MORALIS_APP_ID;\n\nconst AlertContext = React.createContext(null);\nAlertContext.displayName = 'AlertContext';\n\nconst AlertProvider = ({ children }: any) => {\n  const [alert, setAlert] = useState();\n  const [alertText, setAlertText] = useState(null);\n\n  \n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider appId={APP_ID ?? \"Invalid\"} serverUrl={URL ?? \"Invalid\"}>\n      <App />\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"]},"metadata":{},"sourceType":"module"}