{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/git-public/evils-moralis/src/components/Minter/minter.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport Web3Modal from 'web3modal';\nimport { MINT_CONTRACT } from '../../../config.js';\nimport TokenMinter from '../../../artifacts/contracts/TokenMinter.sol/TokenMinter.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Minter = () => {\n  _s();\n\n  React.useEffect(() => {\n    () => {\n      let timer1 = setTimeout(async () => {\n        const signer = await Web3Service.getMySigner();\n        let contract = new ethers.Contract(MINT_CONTRACT, TokenMinter.abi, signer);\n        console.log(`total supply ${await contract.totalSupply()}`);\n      }, 1 * 1000); // this will clear Timeout\n      // when component unmount like in willComponentUnmount\n      // and show will not change to true\n\n      return () => {\n        clearTimeout(timer1);\n      };\n    }, [];\n  });\n\n  async function mint() {\n    debugger;\n    const signer = await Web3Service.getMySigner();\n    let contract = new ethers.Contract(MINT_CONTRACT, TokenMinter.abi, signer);\n    var mintRate = await contract.mintRate();\n    var max = await contract.MAX_SUPPLY();\n    let transaction = await contract.safeMint(await signer.getAddress());\n    let tx = await transaction.wait();\n    console.log(`total supply ${await contract.totalSupply()} / from ${max} . Mint rate ${ethers.utils.formatUnits(mintRate, 'ether')} eth`);\n  }\n\n  const Web3Service = {\n    getMySigner: async function () {\n      const web3Modal = new Web3Modal();\n      const connection = await web3Modal.connect();\n      const provider = new ethers.providers.Web3Provider(connection);\n      return provider.getSigner();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"font-bold p-4 mt-4 bg-pink-500 text-white rounded  shadow-lg\",\n      onClick: mint,\n      children: \" MINT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MINTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Minter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Minter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Minter\");","map":{"version":3,"sources":["/Users/macbook/git-public/evils-moralis/src/components/Minter/minter.tsx"],"names":["React","ethers","Web3Modal","MINT_CONTRACT","TokenMinter","Minter","useEffect","timer1","setTimeout","signer","Web3Service","getMySigner","contract","Contract","abi","console","log","totalSupply","clearTimeout","mint","mintRate","max","MAX_SUPPLY","transaction","safeMint","getAddress","tx","wait","utils","formatUnits","web3Modal","connection","connect","provider","providers","Web3Provider","getSigner"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,SACIC,aADJ,QAEO,oBAFP;AAIA,OAAOC,WAAP,MAAwB,+DAAxB;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxBL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AAClB,UAAM;AACF,UAAIC,MAAM,GAAGC,UAAU,CAAC,YAAY;AAChC,cAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,WAAZ,EAArB;AACA,YAAIC,QAAQ,GAAG,IAAIX,MAAM,CAACY,QAAX,CAAoBV,aAApB,EAAmCC,WAAW,CAACU,GAA/C,EAAoDL,MAApD,CAAf;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAa,gBAAe,MAAMJ,QAAQ,CAACK,WAAT,EAAuB,EAAzD;AACH,OAJsB,EAIpB,IAAI,IAJgB,CAAvB,CADE,CAOF;AACA;AACA;;AACA,aAAO,MAAM;AACTC,QAAAA,YAAY,CAACX,MAAD,CAAZ;AACH,OAFD;AAGH,KAbD,EAaG,EAbH;AAcH,GAfD;;AAiBA,iBAAeY,IAAf,GAAsB;AAClB;AACA,UAAMV,MAAM,GAAG,MAAMC,WAAW,CAACC,WAAZ,EAArB;AACA,QAAIC,QAAQ,GAAG,IAAIX,MAAM,CAACY,QAAX,CAAoBV,aAApB,EAAmCC,WAAW,CAACU,GAA/C,EAAoDL,MAApD,CAAf;AAEA,QAAIW,QAAQ,GAAG,MAAMR,QAAQ,CAACQ,QAAT,EAArB;AACA,QAAIC,GAAG,GAAG,MAAMT,QAAQ,CAACU,UAAT,EAAhB;AAEA,QAAIC,WAAW,GAAG,MAAMX,QAAQ,CAACY,QAAT,CAAkB,MAAMf,MAAM,CAACgB,UAAP,EAAxB,CAAxB;AACA,QAAIC,EAAE,GAAG,MAAMH,WAAW,CAACI,IAAZ,EAAf;AAEAZ,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAe,MAAMJ,QAAQ,CAACK,WAAT,EAAuB,WAAUI,GAAI,gBAAepB,MAAM,CAAC2B,KAAP,CAAaC,WAAb,CAAyBT,QAAzB,EAAmC,OAAnC,CAA4C,MAAlI;AACH;;AAGD,QAAMV,WAAW,GAAG;AAChBC,IAAAA,WAAW,EAAE,kBAAkB;AAC3B,YAAMmB,SAAS,GAAG,IAAI5B,SAAJ,EAAlB;AACA,YAAM6B,UAAU,GAAG,MAAMD,SAAS,CAACE,OAAV,EAAzB;AACA,YAAMC,QAAQ,GAAG,IAAIhC,MAAM,CAACiC,SAAP,CAAiBC,YAArB,CAAkCJ,UAAlC,CAAjB;AACA,aAAOE,QAAQ,CAACG,SAAT,EAAP;AACH;AANe,GAApB;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,8DAAlB;AAAiF,MAAA,OAAO,EAAEjB,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAjDM;;GAAMd,M;;KAAAA,M","sourcesContent":["import React from 'react'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport { ethers } from 'ethers'\nimport Web3Modal from 'web3modal'\n\nimport {\n    MINT_CONTRACT\n} from '../../../config.js'\n\nimport TokenMinter from '../../../artifacts/contracts/TokenMinter.sol/TokenMinter.json'\n\nexport const Minter = () => {\n    React.useEffect(() => {\n        () => {\n            let timer1 = setTimeout(async () => {\n                const signer = await Web3Service.getMySigner()\n                let contract = new ethers.Contract(MINT_CONTRACT, TokenMinter.abi, signer);\n                console.log(`total supply ${await contract.totalSupply()}`)\n            }, 1 * 1000);\n\n            // this will clear Timeout\n            // when component unmount like in willComponentUnmount\n            // and show will not change to true\n            return () => {\n                clearTimeout(timer1);\n            };\n        }, []\n    });\n\n    async function mint() {\n        debugger;\n        const signer = await Web3Service.getMySigner()\n        let contract = new ethers.Contract(MINT_CONTRACT, TokenMinter.abi, signer);\n\n        var mintRate = await contract.mintRate();\n        var max = await contract.MAX_SUPPLY();\n\n        let transaction = await contract.safeMint(await signer.getAddress())\n        let tx = await transaction.wait();\n\n        console.log(`total supply ${await contract.totalSupply()} / from ${max} . Mint rate ${ethers.utils.formatUnits(mintRate, 'ether')} eth`)\n    }\n\n\n    const Web3Service = {\n        getMySigner: async function () {\n            const web3Modal = new Web3Modal()\n            const connection = await web3Modal.connect()\n            const provider = new ethers.providers.Web3Provider(connection)\n            return provider.getSigner()\n        }\n    };\n\n    return (\n        <div className='text-center'>\n            <button className=\"font-bold p-4 mt-4 bg-pink-500 text-white rounded  shadow-lg\" onClick={mint}> MINT</button>\n\n            <h2>MINTER</h2>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}